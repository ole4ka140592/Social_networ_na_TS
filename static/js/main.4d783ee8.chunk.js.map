{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/UsersContainer.module.css","redux/profileReducer.ts","redux/dialogsReducer.ts","assets/images/user.png","components/Header/HeaderContainer.module.css","api/api.ts","components/Navbar/Navbar.module.css","reportWebVitals.ts","redux/sidebarReducer.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/appReducer.ts","redux/reduxStore.ts","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersPresentationComponent.tsx","redux/usersSelectors.tsx","components/Users/UsersContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","App.tsx","index.tsx","components/common/FormsControls/FormControls.module.css","components/Header/Header.module.css","components/Login/Login.module.css","components/common/FormsControls/FormControls.tsx","components/Users/Users.module.css","utils/validators/validators.tsx","components/common/Preloader/Preloader2.tsx","components/Users/UsersPresentationComponent.module.css"],"names":["module","exports","SET_USER_PROFILE","profilePageState","posts","id","message","like","profile","status","profileReducer","state","action","type","newPost","Date","getTime","newPostText","stateCopy","photos","setStatus","addPostAC","getUserProfileThunkCreator","userId","dispatch","usersAPI","getProfile","then","response","data","getUserStatusThunkCreator","profileAPI","getStatus","res","updateUserStatusThunkCreator","updateStatus","resultCode","savePhoto","file","saveProfile","formData","getState","auth","messages","length","stopSubmit","_error","dialogsPageState","dialogs","name","dialogsReducer","body","newMessageBody","sendMessageAC","instance","axios","create","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","console","warn","put","photoFile","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","logOuth","captchaAPI","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","usersPageState","users","totalUsersCount","isFetching","followingInProgress","setUsers","setCurrentPage","setFetching","toggleFollowingProgress","SET_USER_DATA","GET_CAPTCHA_URL","authPageState","isAuth","captchaUrl","setAuthUserData","getAuthUserDataThunkCreator","getCaptchaUrlTC","url","payload","getCaptchaUrl","INITIALIZED_SUCCESS","initialized","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","map","m","followed","totalCount","filter","form","formReducer","app","store","createStore","applyMiddleware","thunk","window","News","Music","Settings","Navbar","props","className","classes","navAll","item","to","activeClassName","activeLink","onClick","loginOuth","Header","header","logo","alt","src","loginBlock","loginItem","HeaderContainer","this","React","Component","connect","Paginator","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","f","selectedPage","e","onPageChanged","margin","User","Paper","style","padding","width","display","userPhoto","user","small","photo","button","disabled","some","followThunkCreator","unFollowThunkCreator","UsersPresentationComponent","paginatorAndUsers","paginator","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","getUsersPageChangedThunkCreator","container","preloader2","Preloader2","compose","items","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Grid","justifyContent","FormControl","FormLabel","textAlign","href","target","Field","placeholder","component","Input","validate","required","inputBorder","checkbox","color","error","formSummaryError","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Suspense","fallback","withRouter","ReactDOM","document","getElementById","Textarea","input","meta","hasError","touched","formControl","value","maxLengthCreator","maxLength","progress","setProgress","timer","setInterval","oldProgress","diff","random","min","clearInterval","sx","variant"],"mappings":"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","file":"static/js/main.4d783ee8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__l5ley\",\"margin\":\"Paginator_margin__ff5Uh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UsersContainer_container__1Q5Sx\"};","import {ActionsTypes} from \"./reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {FormProfileDataType} from \"../components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\"\r\nconst SET_STATUS = \"SET_STATUS\"\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\"\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    like: number\r\n}\r\n\r\nexport type ContactsType = {\r\n    facebook: string,\r\n    website: string,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: string,\r\n    github: string,\r\n    mainLink: string\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null,\r\n    large: string | null\r\n}\r\n\r\nexport type ProfileType = {\r\n    userId: number,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    contacts: ContactsType,\r\n    photos: PhotosType,\r\n    aboutMe: string\r\n}\r\n\r\nlet profilePageState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', like: 15},\r\n        {id: 2, message: 'It is my first post', like: 20}\r\n    ] as Array<PostsType>,\r\n    profile: null as ProfileType | null,\r\n    status: ''\r\n}\r\n\r\nexport type ProfilePageStateType = typeof profilePageState\r\n\r\nexport const profileReducer = (state: ProfilePageStateType = profilePageState,\r\n                               action: ActionsTypes): ProfilePageStateType => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\": {\r\n            const newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostText,\r\n                like: 0\r\n            }\r\n            let stateCopy = {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n            return stateCopy\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case \"SET_STATUS\": {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        case \"SAVE_PHOTO_SUCCESS\": {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ProfileReducerType = AddPostType | SetUserProfileType | SetStatusType | SavePhotoSuccessType\r\n\r\nexport type SetStatusType = ReturnType<typeof setStatus>\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    } as const\r\n}\r\n\r\nexport type AddPostType = ReturnType<typeof addPostAC>\r\nexport const addPostAC = (newPostText: string) => {\r\n    return {\r\n        type: \"ADD-POST\",\r\n        newPostText\r\n    } as const\r\n}\r\n\r\nexport type SetUserProfileType = ReturnType<typeof setUserProfile>\r\nexport const setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    } as const\r\n}\r\n\r\nexport type SavePhotoSuccessType = ReturnType<typeof savePhotoSuccess>\r\nexport const savePhotoSuccess = (photos: PhotosType) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    } as const\r\n}\r\n\r\n\r\nexport const getUserProfileThunkCreator = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        usersAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserStatusThunkCreator = (userId: number) => (dispatch: Dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then((res) => {\r\n            dispatch(setStatus(res.data))\r\n        })\r\n}\r\n\r\nexport const updateUserStatusThunkCreator = (status: string) => (dispatch: Dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then((res) => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}\r\n\r\nexport const savePhoto = (file: string) => (dispatch: Dispatch) => {\r\n    profileAPI.savePhoto(file)\r\n        .then((res) => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(res.data.data.photos))\r\n            }\r\n        })\r\n}\r\n\r\nexport const saveProfile = (formData: FormProfileDataType) => (dispatch: Dispatch<any>, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    profileAPI.saveProfile(formData)\r\n        .then((res) => {\r\n            debugger\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(getUserProfileThunkCreator(userId))\r\n            } else {\r\n                let message = res.data.messages.length > 0 ? res.data.messages[0] : \"Some error\"\r\n                dispatch(stopSubmit(\"edit-profile\", {_error: message}))\r\n                // return Promise.reject(res.data.messages[0])\r\n            }\r\n        })\r\n}","import {ActionsTypes} from \"./reduxStore\";\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport let dialogsPageState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Where you from?'},\r\n        {id: 4, message: 'How old are you?'},\r\n        {id: 5, message: 'Bye!'},\r\n    ] as Array<MessagesType>,\r\n}\r\n\r\nexport type DialogsPageStateType = typeof dialogsPageState\r\n\r\n\r\nexport const dialogsReducer = (state: DialogsPageStateType = dialogsPageState,\r\n                               action: ActionsTypes): DialogsPageStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case \"SEND-MESSAGE\": {\r\n            let body = action.newMessageBody\r\n            let stateCopy = {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n\r\n            return stateCopy\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type DialogsReducerType = SendMessageAC\r\n\r\nexport type SendMessageAC = ReturnType<typeof sendMessageAC>\r\n\r\nexport const sendMessageAC = (newMessageBody: string) => {\r\n    return {\r\n        type: \"SEND-MESSAGE\",\r\n        newMessageBody\r\n    } as const\r\n}","export default __webpack_public_path__ + \"static/media/user.dae3c84f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderContainer_header__91wnV\"};","import axios from \"axios\";\r\nimport {FormProfileDataType} from \"../components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"0ab1e7b3-e560-4134-9877-af2e3009657c\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n\r\n    getProfile(userId: number) {\r\n        console.warn(\"Obsolete method. Please profileAPI object.\")\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status/`, {status})\r\n    },\r\n    savePhoto(photoFile: string) {\r\n        const formData= new FormData()\r\n        formData.append(\"image\", photoFile)\r\n\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n    },\r\n    saveProfile(formData: FormProfileDataType) {\r\n        return instance.put(`profile`, formData)\r\n    },\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: null | string) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logOuth() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const captchaAPI = {\r\n    captcha() {\r\n        debugger\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navAll\":\"Navbar_navAll__3uVQZ\",\"nav\":\"Navbar_nav__2H6h1\",\"img\":\"Navbar_img__ejn79\",\"item\":\"Navbar_item__1tYbL\",\"activeLink\":\"Navbar_activeLink__EZMo7\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ActionsTypes} from \"./reduxStore\";\r\n\r\n\r\nexport type SidebarType = {}\r\n\r\nlet initialState : SidebarType = {}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport type SidebarReducerType = ReturnType<typeof sidebarReducer>\r\n\r\nexport const sidebarReducer=(state: InitialStateType = initialState, action: ActionsTypes)\r\n    : InitialStateType=> {\r\n\r\n    switch(action.type) {\r\n\r\n        default: return state\r\n\r\n    }\r\n\r\n}","import {ActionsTypes} from \"./reduxStore\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst SET_FETCHING = \"SET_FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string | null,\r\n        large: string | null\r\n    }\r\n    followed: boolean\r\n    location: {\r\n        city: string | null\r\n        country: string | null\r\n    }\r\n}\r\n\r\n// export type UsersPageStateType = typeof usersPageState\r\n\r\nexport type UsersPageStateType = {\r\n    users: Array<UserType>,\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport let usersPageState = {\r\n\r\n    users: [] as Array<UserType>,\r\n    totalUsersCount: 0,\r\n    pageSize: 8,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\nexport const usersReducer = (state: UsersPageStateType = usersPageState,\r\n                             action: ActionsTypes): UsersPageStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userId ? {...m, followed: true} : m)\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userId ? {...m, followed: false} : m)\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n\r\n        case SET_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type UsersReducerType =\r\n    Follow\r\n    | Unfollow\r\n    | SetUsers\r\n    | SetCurrentPage\r\n    | SetTotalUsersCount\r\n    | SetFetching\r\n    | FollowingInProgress\r\n\r\nexport type Follow = ReturnType<typeof follow>\r\n\r\nexport const follow = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport type Unfollow = ReturnType<typeof unfollow>\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport type SetUsers = ReturnType<typeof setUsers>\r\n\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    } as const\r\n}\r\n\r\nexport type SetCurrentPage = ReturnType<typeof setCurrentPage>\r\n\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    } as const\r\n}\r\n\r\nexport type SetTotalUsersCount = ReturnType<typeof setTotalUsersCount>\r\n\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCount\r\n    } as const\r\n}\r\n\r\nexport type SetFetching = ReturnType<typeof setFetching>\r\n\r\nexport const setFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: SET_FETCHING,\r\n        isFetching: isFetching\r\n    } as const\r\n}\r\n\r\nexport type FollowingInProgress = ReturnType<typeof toggleFollowingProgress>\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUsersPageChangedThunkCreator = (pageNumber: number, pageSize: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setCurrentPage(pageNumber))\r\n        dispatch(setFetching(true))\r\n        usersAPI.getUsers(pageNumber, pageSize).then(data => {\r\n            dispatch(setFetching(false))\r\n            dispatch(setUsers(data.items))\r\n        })\r\n    }\r\n}\r\n\r\nexport const followThunkCreator = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollow(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowThunkCreator = (userId: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(follow(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI, captchaAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = \"SAMURAI-NETWORK/AUTH/SET_USER_DATA\"\r\nconst GET_CAPTCHA_URL = \"SAMURAI-NETWORK/AUTH/GET_CAPTCHA_URL\"\r\n\r\nexport type AuthPageStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captchaUrl: null | string\r\n}\r\n\r\nexport let authPageState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nexport const authReducer = (state: AuthPageStateType = authPageState, action: AuthReducerType)\r\n    : AuthPageStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth,\r\n                userId: action.userId,\r\n                email: action.email,\r\n                login: action.login\r\n            }\r\n        }\r\n\r\n        case GET_CAPTCHA_URL: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AuthReducerType = SetUserData | GetCaptchaUrlType\r\nexport type SetUserData = ReturnType<typeof setAuthUserData>\r\nexport type GetCaptchaUrlType = ReturnType<typeof getCaptchaUrl>\r\n\r\nexport const setAuthUserData = (userId: number | null, login: string | null,\r\n                                email: string | null,\r\n                                isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        userId,\r\n        login,\r\n        email,\r\n        isAuth\r\n    } as const\r\n}\r\n\r\nexport const getCaptchaUrl = (captchaUrl: null | string) => {\r\n    return {\r\n        type: GET_CAPTCHA_URL,\r\n        payload: {captchaUrl}\r\n    } as const\r\n}\r\n\r\nexport const getAuthUserDataThunkCreator = () => (dispatch: Dispatch) => {\r\n   return authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data\r\n                debugger\r\n                dispatch(setAuthUserData(id, login, email, true));\r\n            }\r\n        })\r\n\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: null | string) =>\r\n    (dispatch: any) => {\r\n        authAPI.login(email, password, rememberMe, captcha)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(getAuthUserDataThunkCreator());\r\n                } else {\r\n                    if (response.data.resultCode === 10) {\r\n                        dispatch(getCaptchaUrlTC())\r\n                    }\r\n                    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n                    dispatch(stopSubmit(\"login\", {_error: message}))\r\n                }\r\n            })\r\n    }\r\n\r\nexport const loginOuth = () => (dispatch: Dispatch) => {\r\n    authAPI.logOuth()\r\n        .then(response => {\r\n\r\n            if (response.data.resultCode === 0) {\r\n\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport const getCaptchaUrlTC = () => (dispatch: any) => {\r\n    captchaAPI.captcha()\r\n            .then(response => {\r\n                const captchaUrl = response.data.url\r\n                dispatch(getCaptchaUrl(captchaUrl))\r\n            })\r\n    }\r\n\r\n\r\n\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport {getAuthUserDataThunkCreator} from \"./authReducer\";\r\nimport {AppStateType} from \"./reduxStore\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = \"SET_INITIALIZED\"\r\n\r\ntype InitialStateStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nexport let initialState = {\r\n    initialized: false\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown,InitializedSuccessType >\r\n\r\nexport const appReducer = (state = initialState, action: InitializedSuccessType): InitialStateStateType=> {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type InitializedSuccessType = ReturnType<typeof initializedSuccess>\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    } as const\r\n}\r\n\r\nexport const initializeApp = (): ThunkType => (dispatch) => {\r\n    let promise = dispatch(getAuthUserDataThunkCreator())\r\n    promise\r\n        .then(()=> {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {AddPostType, profileReducer, ProfileReducerType} from \"./profileReducer\";\r\nimport {dialogsReducer, SendMessageAC} from \"./dialogsReducer\";\r\nimport {sidebarReducer} from \"./sidebarReducer\";\r\nimport {usersReducer, UsersReducerType} from \"./usersReducer\";\r\nimport {authReducer, AuthReducerType} from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer, InitializedSuccessType} from \"./appReducer\";\r\n\r\n\r\nexport type ActionsTypes = AddPostType | SendMessageAC | ProfileReducerType | AuthReducerType\r\n    |UsersReducerType | InitializedSuccessType\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from \"react\";\r\n\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './Navbar.module.css'\r\n\r\n\r\nexport type NavbarPropsType = {\r\n    loginOuth: () => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Navbar = (props: NavbarPropsType) => {\r\n\r\n    return (\r\n        <nav className={classes.navAll}>\r\n                <div className={classes.item}>\r\n                    <NavLink to='/profile' activeClassName={classes.activeLink}>PROFILE</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to='/users' activeClassName={classes.activeLink}>USERS</NavLink>\r\n                </div>\r\n                <div className={classes.item}>\r\n                    <NavLink to='/dialogs' activeClassName={classes.activeLink}>MESSAGES</NavLink>\r\n                </div>\r\n            {props.isAuth\r\n                ?<div className={classes.item}>\r\n                    <div onClick={props.loginOuth}>LOGOUT</div>\r\n                </div>\r\n                :<div className={classes.item}>\r\n                    <NavLink to='/login' activeClassName={classes.activeLink}>LOGIN</NavLink>\r\n                </div>}\r\n        </nav>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport classes from './Header.module.css'\r\nimport {Navbar} from \"../Navbar/Navbar\";\r\n\r\n\r\nexport type HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null,\r\n    loginOuth: () => void\r\n}\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <div className={classes.header}>\r\n            <div className={classes.logo}>\r\n                <img alt=\"\"\r\n                     src='https://www.pngkit.com/png/full/361-3618320_full-hd-pictures-the-social-network-social-network.png'/>\r\n            </div>\r\n            <div>\r\n                <Navbar loginOuth={props.loginOuth} isAuth={props.isAuth}/>\r\n            </div>\r\n            <div className={classes.loginBlock}>\r\n                <div className={classes.login}>\r\n                    {props.isAuth &&\r\n                    <div className={classes.loginItem}>{props.login}</div>}                                     </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Header, HeaderPropsType} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginOuth} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport classes from \"./HeaderContainer.module.css\";\r\n\r\n\r\ntype AuthPropsType = MapStateToPropsType & MapDispatchToPropsType & HeaderPropsType\r\n\r\nexport type MapStateToPropsType = typeof mapStateToProps\r\n\r\ntype MapDispatchToPropsType = {\r\n    loginOuth: ()=> void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<AuthPropsType> {\r\n\r\n    render() {\r\n    return <div className={classes.header}>\r\n        <Header\r\n        isAuth={this.props.isAuth}\r\n        login={this.props.login}\r\n        loginOuth={this.props.loginOuth}\r\n    />\r\n    </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect (mapStateToProps, {loginOuth})\r\n(HeaderContainer)","import React, {useState} from \"react\";\r\nimport classes from './Paginator.module.css'\r\n\r\ntype PaginatorType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n\r\n}\r\n\r\nexport const Paginator = (props: PaginatorType) => {\r\n    let portionSize = 10\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(props.totalUsersCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 && <button onClick={() =>\r\n                setPortionNumber(portionNumber - 1)}>PREV</button>}\r\n\r\n            <div >\r\n            <span>\r\n                    {pages\r\n                        .filter(f => f >= leftPortionPageNumber && f <= rightPortionPageNumber)\r\n                        .map(m => <span className={\r\n                            props.currentPage === m\r\n                                ? classes.selectedPage\r\n                                : \"\"}\r\n                                        onClick={(e) => {\r\n                                            props.onPageChanged(m)\r\n                                        }} key={m}>\r\n                            <span className={classes.margin}>{m}</span></span>)}\r\n                </span>\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>PREV</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import classes from './Users.module.css'\r\nimport userPhoto from \"../../assets/images/user.png\"\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Paper} from \"@material-ui/core\";\r\n\r\n\r\ntype UserType = {\r\n    user: any\r\n    follow: (userID: number) => void\r\n    followingInProgress: Array<number>\r\n    followThunkCreator: (userID: number) => void\r\n    unFollowThunkCreator: (userID: number) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const User = (props: UserType) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Paper style={{padding: '10px', width: '200px', margin: \"10px\",\r\n                display: \"flex-row\", }}>\r\n                        <span>\r\n                            <div className={classes.userPhoto}>\r\n                                <NavLink to={\"/profile/\" + props.user.id}>\r\n\r\n                                <img src={props.user.photos.small !== null ? props.user.photos.small : userPhoto} alt=\"\" className={classes.photo}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={classes.button}>\r\n                                {props.user.followed\r\n                                    ? <button disabled={!props.isAuth || props.followingInProgress.some(id => id === props.user.id)}\r\n                                              onClick={() => {\r\n                                                  props.followThunkCreator(props.user.id)\r\n                                              }}>Unfollow</button>\r\n                                    : <button disabled={!props.isAuth || props.followingInProgress.some(id => id === props.user.id)}\r\n                                              onClick={() => {\r\n                                                  props.unFollowThunkCreator(props.user.id)\r\n                                              }}>Follow</button>\r\n                                }\r\n                            </div>\r\n                        </span>\r\n                <div className={classes.data}>\r\n            <span>\r\n                            <span>\r\n                                <div>{props.user.name}</div>\r\n                                <div>{props.user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"m.location.country\"}</div>\r\n                                <div>{\"m.location.city\"}</div>\r\n                            </span>\r\n                        </span>\r\n                </div>\r\n                </Paper>\r\n        </div>)\r\n}\r\n\r\n","import React from \"react\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\nimport classes from './UsersPresentationComponent.module.css'\r\n\r\n\r\ntype UsersPresentationComponentPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    followThunkCreator: (userID: number) => void\r\n    unFollowThunkCreator: (userID: number) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const UsersPresentationComponent = (props: UsersPresentationComponentPropsType) => {\r\n\r\n    return (<div className={classes.paginatorAndUsers}>\r\n            <div className={classes.paginator}>\r\n                <Paginator\r\n                    totalUsersCount={props.totalUsersCount}\r\n                    pageSize={props.pageSize}\r\n                    currentPage={props.currentPage}\r\n                    onPageChanged={props.onPageChanged}\r\n                />\r\n            </div>\r\n            <div className={classes.users}>\r\n                {\r\n                    props.users.map(m => <User\r\n                        user={m}\r\n                        follow={props.follow}\r\n                        followingInProgress={props.followingInProgress}\r\n                        followThunkCreator={props.followThunkCreator}\r\n                        unFollowThunkCreator={props.unFollowThunkCreator}\r\n                        key={m.id}\r\n                        isAuth={props.isAuth}\r\n                    />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {\r\n    follow, followThunkCreator, getUsersPageChangedThunkCreator, getUsersThunkCreator,\r\n    toggleFollowingProgress,\r\n    unfollow, unFollowThunkCreator,\r\n    UserType\r\n} from \"../../redux/usersReducer\";\r\nimport React from \"react\";\r\nimport {UsersPresentationComponent} from \"./UsersPresentationComponent\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/usersSelectors\";\r\nimport Preloader2 from \"../common/Preloader/Preloader2\";\r\nimport classes from \"./UsersContainer.module.css\";\r\n\r\n\r\ntype UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsersPageChangedThunkCreator(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <div className={classes.container}>\r\n            <div className={classes.preloader2}>\r\n                {this.props.isFetching\r\n                ? <Preloader2/>\r\n                : \"\"}\r\n            </div>\r\n            <div>\r\n                <UsersPresentationComponent onPageChanged={this.onPageChanged}\r\n                                            totalUsersCount={this.props.totalUsersCount}\r\n                                            pageSize={this.props.pageSize}\r\n                                            currentPage={this.props.currentPage}\r\n                                            unfollow={this.props.unfollow}\r\n                                            follow={this.props.follow}\r\n                                            users={this.props.users}\r\n                                            followingInProgress={this.props.followingInProgress}\r\n                                            toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                                            followThunkCreator={this.props.followThunkCreator}\r\n                                            unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n                                            isAuth={this.props.isAuth}\r\n\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<number>,\r\n    isAuth: boolean\r\n}\r\n\r\nexport type MapDispatchToPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    getUsersPageChangedThunkCreator: (pageNumber: number, pageSize: number) => void\r\n    followThunkCreator: (userId: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n}\r\n\r\nfunction mapStateToProps(state: AppStateType): MapStateToPropsType {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow,\r\n        toggleFollowingProgress,\r\n        getUsers: getUsersThunkCreator,\r\n        getUsersPageChangedThunkCreator,\r\n        followThunkCreator, unFollowThunkCreator\r\n    })\r\n)(UsersContainer)","import React from \"react\";\r\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport classes from \"../common/FormsControls/FormControls.module.css\";\r\nimport style from \"./Login.module.css\";\r\nimport {\r\n    FormControl, FormLabel,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nexport type CaptchaType = {\r\n    captchaUrl: null | string\r\n}\r\n\r\ntype ownType = CaptchaType & InjectedFormProps<FormDataType, CaptchaType>\r\n\r\nexport const LoginForm: React.FC<ownType> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.login}>\r\n            <div>\r\n                <Grid container justifyContent={'center'}>\r\n                    <Grid item justifyContent={'center'}>\r\n                        <FormControl>\r\n                            <FormLabel style={{\r\n                                padding: '10px', width: '300px', margin: \"1px\",\r\n                                display: \"flex-row\", textAlign: \"center\"\r\n                            }}>\r\n                                <p>To log in get registered <a href={'https://social-network.samuraijs.com/'}\r\n                                                               target={'_blank'}> here\r\n                                </a> or use common test account credentials:</p>\r\n                                <p>Email: free.it.free1@gmail.com</p>\r\n                                <p>Password: 123456789</p>\r\n                            </FormLabel>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <Field placeholder={\"Email\"}\r\n                           component={Input}\r\n                           name={\"email\"}\r\n                           validate={required}\r\n                           className={style.inputBorder}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field placeholder={\"Password\"}\r\n                           component={Input}\r\n                           name={\"password\"}\r\n                           validate={required}\r\n                           type={\"password\"}\r\n                           className={style.inputBorder}\r\n                    />\r\n                </div>\r\n                <div className={style.checkbox}>\r\n                    <div>\r\n                        <Field component={Input}\r\n                               type=\"checkbox\"\r\n                               name={\"rememberMe\"}/>\r\n                    </div>\r\n                    <div className={style.color}>remember me</div>\r\n                </div>\r\n            </div>\r\n            {props.captchaUrl && <img src={props.captchaUrl}/>}\r\n            {props.captchaUrl && <Field placeholder={\"captcha\"}\r\n                                        component={Input}\r\n                                        name={\"captcha\"}\r\n                                        validate={required}\r\n                                        type={\"captcha\"}/>}\r\n\r\n            {props.error && <div className={classes.formSummaryError}>{props.error}</div>}\r\n            <div>\r\n                <button className={classes.button}>LOGIN</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm<FormDataType, CaptchaType>({form: \"login\"})(LoginForm)","import {FormDataType, LoginReduxForm} from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Login: React.FC<MapDispatchToPropsType & MapStateToPropsType> = (props) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div >\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n\r\n    </div>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: null | string\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import React, {Component, ComponentType} from 'react';\nimport './App.css';\nimport {Redirect, Route, withRouter} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"./redux/reduxStore\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader2 from \"./components/common/Preloader/Preloader2\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component<AppType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader2/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <div className='navbarAndContent'>\n                    <div className='app-wrapper-content'>\n                        <Route path='/login' render={() => <Login/>}/>\n                        {/*{this.props.initialized && <Route path='/login' render={() => <Login/>}/>}*/}\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/dialogs' render={() => {\n                            return <React.Suspense fallback={<></>}>\n                                <DialogsContainer/>\n                            </React.Suspense>\n                        }}/>\n                        <Route path='/profile/:userId?' render={() => {\n                            return <React.Suspense fallback={<></>}>\n                                <ProfileContainer/>\n                            </React.Suspense>\n                        }}/>\n                        {!this.props.isAuth && <Redirect to={'/login'}/>}\n                        {this.props.isAuth && <Redirect to={'/profile'}/>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\ntype AppType = MapStateToPropsType & MapDispatchToPropsType\n\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\n\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose<ComponentType>(\n    withRouter,\n    connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {initializeApp})\n)(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/reduxStore\";\nimport App from \"./App\";\nimport './index.css';\n\nReactDOM.render(\n    <HashRouter >\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>, document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2GvxM\",\"error\":\"FormControls_error__Q-HQp\",\"formSummaryError\":\"FormControls_formSummaryError__1sAFn\",\"button\":\"FormControls_button__3srCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__nh3Y3\",\"logo\":\"Header_logo__2rJMd\",\"img\":\"Header_img__1ktK_\",\"loginBlock\":\"Header_loginBlock__2qdgM\",\"login\":\"Header_login__23lU5\",\"loginItem\":\"Header_loginItem__hyoY1\",\"button\":\"Header_button__2R2AO\",\"loginReg\":\"Header_loginReg__3RcOp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2cdw9\",\"inputBorder\":\"Login_inputBorder__35azO\",\"checkbox\":\"Login_checkbox__1xGWF\",\"color\":\"Login_color__1qliF\"};","import {WrappedFieldProps} from \"redux-form\";\r\nimport classes from \"./FormControls.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__2PEZu\",\"userPhoto\":\"Users_userPhoto__1Mo0D\",\"button\":\"Users_button__1C4u5\",\"data\":\"Users_data__nl-M1\"};","export const required = (value: string) => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n","import * as React from 'react';\r\nimport {Box, LinearProgress} from \"@material-ui/core\";\r\n\r\n\r\nexport default function Preloader2() {\r\n    const [progress, setProgress] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setProgress((oldProgress) => {\r\n                if (oldProgress === 100) {\r\n                    return 0;\r\n                }\r\n                const diff = Math.random() * 10;\r\n                return Math.min(oldProgress + diff, 100);\r\n            });\r\n        }, 500);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Box>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorAndUsers\":\"UsersPresentationComponent_paginatorAndUsers__2wthC\",\"paginator\":\"UsersPresentationComponent_paginator__3kFLf\",\"users\":\"UsersPresentationComponent_users__R0Rz-\"};"],"sourceRoot":""}